{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","movieCaracter","id","name","email","CardList","movieCaracters","map","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchString","target","value","state","fetch","then","response","json","users","this","filteredMovieCharacters","filter","character","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAI,YACJC,IAAG,+BAA0BH,EAAMI,cAAcC,GAA9C,eAEL,6BAAKL,EAAMI,cAAcE,OACzB,6BAAKN,EAAMI,cAAcG,YCLhBC,EAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,eAAeC,KAAI,SAACN,GAAD,OACxB,cAAC,EAAD,CAA6BA,cAAeA,GAAjCA,EAAcC,UCJlBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCDG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,aAAcF,EAAMG,OAAOC,SAf3C,EAAKC,MAAQ,CACXb,eAAgB,GAChBU,aAAc,IALJ,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,eAAgBkB,S,oBAMrD,WAAU,IAAD,EACkCC,KAAKN,MAAtCb,EADD,EACCA,eAAgBU,EADjB,EACiBA,aAClBU,EAA0BpB,EAAeqB,QAAO,SAACC,GAAD,OACpDA,EAAUzB,KAAK0B,cAAcC,SAASd,EAAaa,kBAErD,OACE,sBAAK/B,UAAU,MAAf,UACE,kEACA,cAAC,EAAD,CACEW,YAAY,wBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,eAAgBoB,W,GAjChBK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86a963fb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\nexport const Card = (props) => (\n  <div className=\"card\">\n    <img\n      alt=\"character\"\n      src={`https://robohash.org/${props.movieCaracter.id}?set=set4`}\n    ></img>\n    <h2>{props.movieCaracter.name}</h2>\n    <h3>{props.movieCaracter.email}</h3>\n  </div>\n);\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"./card/card.component\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.movieCaracters.map((movieCaracter) => (\n      <Card key={movieCaracter.id} movieCaracter={movieCaracter} />\n    ))}\n  </div>\n);\n","import { React } from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movieCaracters: [],\n      searchString: \"\",\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://jsonplaceholder.typicode.com/users/\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ movieCaracters: users }));\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchString: event.target.value });\n  };\n  render() {\n    const { movieCaracters, searchString } = this.state;\n    const filteredMovieCharacters = movieCaracters.filter((character) =>\n      character.name.toLowerCase().includes(searchString.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Movie Characters - React project</h1>\n        <SearchBox\n          placeholder=\"Search for characters\"\n          handleChange={this.handleChange}\n        />\n        <CardList movieCaracters={filteredMovieCharacters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}